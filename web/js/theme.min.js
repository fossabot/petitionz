"use strict"; jQuery(document).ready(function (e) {
    e.material.init(), e("#main-carousel").length && e("#main-carousel").owlCarousel({ loop: !0, items: 1, responsiveClass: !0, nav: !0, navText: [], responsive: { 0: { items: 1 }, 480: { items: 1 }, 768: { items: 1 } } }), e("#updates-carousel").length > 0 && e("#updates-carousel").owlCarousel({ loop: !1, items: 1, pagination: !0, dots: !0, navigation: !1, responsive: { 0: { items: 1 }, 480: { items: 1 }, 768: { items: 1 } } }), e(".counter").counterUp({ delay: 10, time: 1e3 }), e("#magnific-gallery").length > 0 && e("#magnific-gallery").magnificPopup({ gallery: { enabled: !0 }, delegate: "a", type: "image" }); for (var t = window.location.protocol + "//" + window.location.host, a = window.location.pathname.split("/"), i = 1; i < a.length - 1; i++)t += "/", t += a[i]; if (e("#disqus_thread").length > 0) { !function () { var e = document, t = e.createElement("script"); t.src = "//cbxthemedemo.disqus.com/embed.js", t.setAttribute("data-timestamp", +new Date), (e.head || e.body).appendChild(t) }() } if (e("#facebook").length > 0) { !function (e, t, a) { var i, r = e.getElementsByTagName(t)[0]; e.getElementById(a) || (i = e.createElement(t), i.id = a, i.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8&appId=631285187080209", r.parentNode.insertBefore(i, r)) }(document, "script", "facebook-jssdk") } if (e("#google-comments").length > 0 && gapi.comments.render("google-comments", { href: window.location, width: "624", first_party_property: "BLOGGER", view_type: "FILTERED_POSTMOD" }), e("#map_canvas").length > 0) { var r = e("#map_canvas"), n = r.data("title"), o = r.data("lat"), l = r.data("lng"), s = r.data("content"), p = s; r.jqcbxgoglemap({ mapOptions: { latitude: [o], longitude: [l], center: !0, scrollwheel: !1, zoom: 17, mapType: "satellite", icon: t + "/assets/img/map-icon.png", infoWindow: [{ title: n, content: p }] } }) } e.validator.setDefaults({ debug: !1, success: "valid" }); var d = function (e) { return /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(e) }; e("form.subscribe-form-action").on("submit", function (a) { a.preventDefault(); var i = e(this), r = i.find("input#subscribe"); if (!d(r.val())) return r.css("color", "#f00f00"), !1; e.ajax({ url: t + "/php/subscribe.php", type: "post", data: { email: r.val().toLowerCase() }, beforeSubmit: function (e) { }, success: function (t) { try { var t = e.parseJSON(t); alert(t.message) } catch (e) { alert(e.message) } }, error: function (e) { } }), i[0].reset() }), e("form.cbx-contactform").validate({ submitHandler: function (a) { var i = e(a); return i.find(".cbx-send-btn").prop("disabled", !0), e.ajax({ url: t + "/php/contact.php", type: "post", data: i.serialize(), beforeSubmit: function (e) { }, success: function (t) { try { var t = e.parseJSON(t); t.error ? e.each(t.error_field, function (e) { i.find("label#" + t.error_field[e] + "-error").text(t.message[t.error_field[e]]) }) : t.successmessage && (alert(t.successmessage), i[0].reset(), i.find(".cbx-send-btn").prop("disabled", !1)) } catch (e) { } i.reset, i.find(".cbx-send-btn").prop("disabled", !1) }, error: function (e) { alert("Sorry, Mail could not be sent. Please try again later."), i.reset, i.find(".cbx-send-btn").prop("disabled", !1) } }), !1 }, rules: { cbxname: { required: !0 }, cbxemail: { required: !0, email: !0 }, cbxsubject: { required: !0 }, cbxmessage: { required: !0 } } }), e("form#signature-form").validate({ submitHandler: function (a) { var i = e(a); return i.find(".btn-cta").prop("disabled", !0), e.ajax({ url: t + "/php/signature.php", type: "post", data: i.serialize(), beforeSubmit: function (e) { }, success: function (t) { try { var t = e.parseJSON(t); t.error ? e.each(t.error_field, function (e) { i.find("label#" + t.error_field[e] + "-error").text(t.message[t.error_field[e]]) }) : t.successmessage && (alert(t.successmessage), i[0].reset(), i.find(".btn-cta").prop("disabled", !1)) } catch (e) { } i.reset, i.find(".btn-cta").prop("disabled", !1) }, error: function (e) { alert("Sorry, Mail could not be sent. Please try again later."), i.reset, i.find(".btn-cta").prop("disabled", !1) } }), !1 }, rules: { "sf-fname": { required: !0 }, "sf-lname": { required: !0 }, "sf-mail": { required: !0, email: !0 }, "detailed-updates": { required: !0 } } }); var c = e("#petition-updates-wrap"), u = parseInt(c.data("count")), f = e("#petition-updates-template").html(); Mustache.parse(f), e("#petition-updates").on("click", "a.petition-updates-trig", function (e) { e.preventDefault(); var t = Mustache.render(f, { count: u }); c.append(t), u++ , c.data("count", u) }), e("#petition-updates-wrap").on("click", ".delete-petition-update", function (t) { t.preventDefault(), u-- , c.data("count", u), e(this).parent(".petition-update").remove() }); var m; e("div#petition-updates-wrap").sortable({ vertical: !0, handle: ".delete-petition-update-drag", containerSelector: "div#petition-updates-wrap", itemSelector: "div.petition-update", placeholder: '<div class="petition-update-placeholder"/>', onDrop: function (t, a, i) { var r = e("<div />").css({ height: 0 }); t.before(r), r.animate({ height: t.height() }), t.animate(r.position(), function () { r.detach(), i(t, a) }) }, onDragStart: function (e, t, a) { var i = e.offset(), r = t.rootGroup.pointer; m = { left: r.left - i.left, top: r.top - i.top }, a(e, t) }, onDrag: function (e, t) { e.css({ left: t.left - m.left, top: t.top - m.top }) } }); var h = t + "/php/server/php/", b = e('<a class="banner-delete" href="#"><i class="fa fa-trash" aria-hidden="true"></i> Delete</a>'); e("#petition-banner").fileupload({ url: h, dataType: "json", autoUpload: !0, acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i, maxFileSize: 999e3, maxNumberOfFiles: 1, disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator.userAgent), previewMaxWidth: 1920, previewMaxHeight: 700, previewCrop: !0 }).on("fileuploadadd", function (e, t) { }).on("fileuploadprocessalways", function (e, t) { var a = t.index, i = t.files[a]; i.error && alert(i.error) }).on("fileuploadprogressall", function (e, t) { }).on("fileuploaddone", function (t, a) { e.each(a.result.files, function (t, a) { a.url ? (e("#petitionbannerwrap").css({ background: "transparent url(" + a.url + ") no-repeat center", "background-size": "100% 100%" }), e("#petitionbannerwrap").addClass("banner-filled"), e("#petitionbannerwrap").append(b)) : a.error && alert(a.error) }) }).on("fileuploadfail", function (t, a) { e.each(a.files, function (e) { alert("File upload failed.") }) }).prop("disabled", !e.support.fileInput).parent().addClass(e.support.fileInput ? void 0 : "disabled"), e("#petitionbannerwrap").on("click", "a.banner-delete", function (t) { t.preventDefault(); var a = e(this); e("#petitionbannerwrap").css({ background: "transparent none no-repeat center", "background-size": "100% 100%" }), a.remove(), alert("This action will delete the banner") }); var v = e("#petition-media-photos"), g = e("#petition-media-photos-template").html(); Mustache.parse(g); var w = t + "/php/server/php/", x = (e('<a class="media-delete" href="#"><i class="fa fa-trash" aria-hidden="true"></i></a>'), e("#petition-media-trig")), y = parseInt(x.data("maxcount")), D = parseInt(x.data("count")); 0 === y && (y = 4), x.fileupload({ url: w, dataType: "json", autoUpload: !0, acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i, maxFileSize: 999e3, maxNumberOfFiles: y, disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator.userAgent), previewMaxWidth: 900, previewMaxHeight: 534, previewCrop: !0, getNumberOfFiles: function () { return parseInt(x.data("count")) } }).on("fileuploadadd", function (e, t) { }).on("fileuploadprocessalways", function (e, t) { var a = t.index, i = t.files[a]; i.error && alert(i.error) }).on("fileuploadprogressall", function (e, t) { }).on("fileuploaddone", function (t, a) {
        e(this); e.each(a.result.files, function (e, t) {
            if (t.url) if (D < y) { var a = Mustache.render(g, { fileurl: t.url }); v.append(a), D++ , x.data("count", D), D >= y && x.prop("disabled", !0) } else
                alert("Maximum photo upload limit crossed"); else t.error
        })
    }).on("fileuploadfail", function (t, a) { e.each(a.files, function (e) { alert("File upload failed.") }) }).prop("disabled", !e.support.fileInput).parent().addClass(e.support.fileInput ? void 0 : "disabled"), e("#petition-media-photos").on("click", "a.media-delete", function (t) { t.preventDefault(), e(this).parents(".banner-media-parent").remove(), D-- , x.data("count", D), D < y && x.prop("disabled", !1), alert("This action will delete the banner") }); var S; e("div#petition-media-photos").sortable({ vertical: !1, handle: ".banner-media-drag", containerSelector: "div#petition-media-photos", itemSelector: "div.banner-media-parent", placeholder: '<div class="col-xs-12 col-md-3 banner-media-parent-placeholder"/>', onDrop: function (t, a, i) { var r = e("<div />").css({ height: 0 }); t.before(r), r.animate({ height: t.height() }), t.animate(r.position(), function () { r.detach(), i(t, a) }) }, onDragStart: function (e, t, a) { var i = e.offset(), r = t.rootGroup.pointer; S = { left: r.left - i.left, top: r.top - i.top }, a(e, t) }, onDrag: function (e, t) { e.css({ left: t.left - S.left, top: t.top - S.top }) } }); var k = e("#petition-letters-blocks"), _ = parseInt(k.data("count")), I = e("#petition-letters-template").html(); Mustache.parse(I), e("#petition-letters").on("click", "a.petition-letter-trig", function (e) { e.preventDefault(); var t = Mustache.render(I, { count: _ }); k.append(t), _++ , k.data("count", _) }), e("#petition-letters").on("click", "a.delete-petition-letter", function (t) { t.preventDefault(), _-- , k.data("count", _), e(this).parent(".petition-letter-person").remove() }); var M; e("div#petition-letters-blocks").sortable({ vertical: !0, handle: ".delete-petition-letter-drag", containerSelector: "div#petition-letters-blocks", itemSelector: "div.petition-letter-person", placeholder: '<div class="petition-letter-person-placeholder"/>', onDrop: function (t, a, i) { var r = e("<div />").css({ height: 0 }); t.before(r), r.animate({ height: t.height() }), t.animate(r.position(), function () { r.detach(), i(t, a) }) }, onDragStart: function (e, t, a) { var i = e.offset(), r = t.rootGroup.pointer; M = { left: r.left - i.left, top: r.top - i.top }, a(e, t) }, onDrag: function (e, t) { e.css({ left: t.left - M.left, top: t.top - M.top }) } }); var j = e("#createpetitionform"), z = j.validate({}); j.submit(function (t) { e(this); z.valid() ? j.find("#createpetitionBtn").prop("disabled", !0) : t.preventDefault() })
});